# Furiko v0.2.1 - https://github.com/furiko-io/furiko/releases/download/v0.2.1/furiko-execution.yaml
apiVersion: v1
kind: Namespace
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-system
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: furiko
  name: jobconfigs.execution.furiko.io
spec:
  group: execution.furiko.io
  names:
    kind: JobConfig
    listKind: JobConfigList
    plural: jobconfigs
    shortNames:
      - furikojobconfig
      - furikojobconfigs
    singular: jobconfig
  preserveUnknownFields: false
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.state
          name: State
          type: string
        - jsonPath: .status.active
          name: Active
          type: string
        - jsonPath: .status.queued
          name: Queued
          type: string
        - jsonPath: .spec.schedule.cron.expression
          name: Cron Schedule
          type: string
        - jsonPath: .spec.schedule.cron.timezone
          name: Timezone
          type: string
        - jsonPath: .status.lastScheduleTime
          name: Last Schedule Time
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description:
            JobConfig is the schema for a single job configuration. Multiple
            Job objects belong to a single JobConfig.
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: JobConfigSpec defines the desired state of the JobConfig.
              properties:
                concurrency:
                  description:
                    Concurrency defines the behaviour of multiple concurrent
                    Jobs.
                  properties:
                    maxConcurrency:
                      description:
                        "Maximum number of Jobs that can be running concurrently
                        for the same JobConfig. Cannot be specified if Policy is set
                        to Allow. \n Defaults to 1."
                      format: int64
                      type: integer
                    policy:
                      description:
                        Policy describes how to treat concurrent executions
                        of the same JobConfig.
                      type: string
                  required:
                    - policy
                  type: object
                option:
                  description:
                    Option is an optional field that defines how the JobConfig
                    is parameterized. Each option defined here can subsequently be used
                    in the Template via context variable substitution.
                  properties:
                    options:
                      description: Options is a list of job options.
                      items:
                        description: Option defines a single job option.
                        properties:
                          bool:
                            description: Bool adds additional configuration for OptionTypeBool.
                            properties:
                              default:
                                description:
                                  Default value, will be used to populate
                                  the option if not specified.
                                type: boolean
                              falseVal:
                                description:
                                  If Format is custom, will be substituted
                                  if value is false. Can also be an empty string.
                                type: string
                              format:
                                description:
                                  "Determines how to format the value as
                                  string. Can be one of: TrueFalse, OneZero, YesNo,
                                  Custom \n Default: TrueFalse"
                                type: string
                              trueVal:
                                description:
                                  If Format is custom, will be substituted
                                  if value is true. Can also be an empty string.
                                type: string
                            required:
                              - default
                            type: object
                          date:
                            description: Date adds additional configuration for OptionTypeDate.
                            properties:
                              format:
                                description:
                                  "Date format in moment.js format. If not
                                  specified, will use RFC3339 format by default. \n
                                  Date format reference: https://momentjs.com/docs/#/displaying/format/
                                  \n Default:"
                                type: string
                            type: object
                          label:
                            description:
                              Label is an optional human-readable label for
                              this option, which is purely used for display purposes.
                            type: string
                          multi:
                            description: Multi adds additional configuration for OptionTypeMulti.
                            properties:
                              allowCustom:
                                description:
                                  "Whether to allow custom values instead
                                  of just the list of allowed values. \n Default: false"
                                type: boolean
                              default:
                                description:
                                  Default values, will be used to populate
                                  the option if not specified.
                                items:
                                  type: string
                                type: array
                              delimiter:
                                description: Delimiter to join values by.
                                type: string
                              values:
                                description: List of values to be chosen from.
                                items:
                                  type: string
                                type: array
                            required:
                              - delimiter
                              - values
                            type: object
                          name:
                            description:
                              "The name of the job option. Will be substituted
                              as `${option.NAME}`. Must match the following regex: ^[a-zA-Z_0-9.-]+$"
                            type: string
                          required:
                            description:
                              "Required defines whether this field is required.
                              \n Default: false"
                            type: boolean
                          select:
                            description: Select adds additional configuration for OptionTypeSelect.
                            properties:
                              allowCustom:
                                description:
                                  "Whether to allow custom values instead
                                  of just the list of allowed values. \n Default: false"
                                type: boolean
                              default:
                                description:
                                  Default value, will be used to populate
                                  the option if not specified.
                                type: string
                              values:
                                description: List of values to be chosen from.
                                items:
                                  type: string
                                type: array
                            type: object
                          string:
                            description: String adds additional configuration for OptionTypeString.
                            properties:
                              default:
                                description:
                                  Optional default value, will be used to
                                  populate the option if not specified.
                                type: string
                              trimSpaces:
                                description:
                                  "Whether to trim spaces before substitution.
                                  \n Default: false"
                                type: boolean
                            type: object
                          type:
                            description:
                              "The type of the job option. Can be one of:
                              bool, string, select, multi, date"
                            type: string
                        required:
                          - name
                          - type
                        type: object
                      type: array
                  type: object
                schedule:
                  description:
                    Schedule is an optional field that defines automatic
                    scheduling of the JobConfig.
                  properties:
                    constraints:
                      description:
                        Specifies any constraints that should apply to this
                        Schedule.
                      properties:
                        notAfter:
                          description:
                            Specifies the latest possible time that is allowed
                            to be scheduled. If set, the scheduler should not create
                            schedules after this time.
                          format: date-time
                          type: string
                        notBefore:
                          description:
                            Specifies the earliest possible time that is
                            allowed to be scheduled. If set, the scheduler should not
                            create schedules before this time.
                          format: date-time
                          type: string
                      type: object
                    cron:
                      description: Specify a schedule using cron expressions.
                      properties:
                        expression:
                          description:
                            "Cron expression to specify how the JobConfig
                            will be periodically scheduled. Example: \"0 0/5 * * *\".
                            \n Supports cron schedules with optional \"seconds\" and
                            \"years\" fields, i.e. can parse between 5 to 7 tokens.
                            \n More information: https://github.com/furiko-io/cronexpr"
                          type: string
                        timezone:
                          description:
                            "Timezone to interpret the cron schedule in.
                            For example, a cron schedule of \"0 10 * * *\" with a timezone
                            of \"Asia/Singapore\" will be interpreted as running at
                            02:00:00 UTC time every day. \n Timezone must be one of
                            the following: \n 1. A valid tz string (e.g. \"Asia/Singapore\",
                            \"America/New_York\"). 2. A UTC offset with minutes (e.g.
                            UTC-10:00). 3. A GMT offset with minutes (e.g. GMT+05:30).
                            The meaning is the same as its UTC counterpart. \n This
                            field merely is used for parsing the cron Expression, and
                            has nothing to do with /etc/timezone inside the container
                            (i.e. it will not set $TZ automatically). \n Defaults to
                            the controller's default configured timezone."
                          type: string
                      required:
                        - expression
                      type: object
                    disabled:
                      description:
                        If true, then automatic scheduling will be disabled
                        for the JobConfig.
                      type: boolean
                    lastUpdated:
                      description:
                        "Specifies the time that the schedule was last updated.
                        This prevents accidental back-scheduling. \n For example, if
                        a JobConfig that was previously disabled from automatic scheduling
                        is now enabled, we do not want to perform back-scheduling for
                        schedules after LastScheduled prior to updating of the JobConfig."
                      format: date-time
                      type: string
                  type: object
                template:
                  description: Template for creating the Job.
                  properties:
                    metadata:
                      description:
                        "Standard object's metadata that will be added to
                        Job. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                      type: object
                      x-kubernetes-preserve-unknown-fields: true
                    spec:
                      description: Specification of the desired behavior of the job.
                      properties:
                        forbidTaskForceDeletion:
                          description:
                            "Defines whether tasks are allowed to be force
                            deleted or not. If the node is unresponsive, it may be possible
                            that the task cannot be killed by normal graceful deletion.
                            The controller may choose to force delete the task, which
                            would ignore the final state of the task since the node
                            is unable to return whether the task is actually still alive.
                            \n If not set to true, there may be some cases when there
                            may actually be two concurrently running tasks when even
                            when ConcurrencyPolicyForbid. Setting this to true would
                            prevent this from happening, but the Job may remain stuck
                            indefinitely until the node recovers."
                          type: boolean
                        maxAttempts:
                          description:
                            "Specifies maximum number of attempts before
                            the Job will terminate in failure. If defined, the controller
                            will wait retryDelaySeconds before creating the next task.
                            Once maxAttempts is reached, the Job terminates in RetryLimitExceeded.
                            \n If parallelism is also defined, this corresponds to the
                            maximum attempts for each parallel task. That is, if there
                            are 5 parallel task to be run at a time, with maxAttempts
                            of 3, the Job may create up to a maximum of 15 tasks if
                            each has failed. \n Value must be a positive integer. Defaults
                            to 1."
                          format: int64
                          type: integer
                        parallelism:
                          description:
                            Describes how to run multiple tasks in parallel
                            for the Job. If not set, then there will be at most a single
                            task running at any time.
                          properties:
                            completionStrategy:
                              description:
                                Defines when the Job will complete when there
                                are multiple tasks running in parallel. For example,
                                if using the AllSuccessful strategy, the Job will only
                                terminate once all parallel tasks have terminated successfully,
                                or once any task has exhausted its maxAttempts limit.
                              type: string
                            withCount:
                              description:
                                Specifies an exact number of tasks to be
                                run in parallel. The index number can be retrieved via
                                the "${task.index_num}" context variable.
                              format: int64
                              type: integer
                            withKeys:
                              description:
                                Specifies a list of keys corresponding to
                                each task that will be run in parallel. The index key
                                can be retrieved via the "${task.index_key}" context
                                variable.
                              items:
                                type: string
                              type: array
                              x-kubernetes-list-type: atomic
                            withMatrix:
                              additionalProperties:
                                items:
                                  type: string
                                type: array
                              description:
                                'Specifies a matrix of key-value pairs, with
                                each key mapped to a list of possible values, such that
                                tasks will be started for each combination of key-value
                                pairs. The matrix values can be retrieved via context
                                variables in the following format: "${task.index_matrix.<key>}".'
                              type: object
                              x-kubernetes-map-type: atomic
                          type: object
                        retryDelaySeconds:
                          description:
                            "Optional duration in seconds to wait between
                            retries. If left empty or zero, it means no delay (i.e.
                            retry immediately). \n If parallelism is also defined, the
                            retry delay is from the time of the last failed task with
                            the same index. That is, if there are two parallel tasks
                            - index 0 and index 1 - which failed at t=0 and t=15, with
                            retryDelaySeconds of 30, the controller will only create
                            the next attempts at t=30 and t=45 respectively. \n Value
                            must be a non-negative integer."
                          format: int64
                          type: integer
                        taskPendingTimeoutSeconds:
                          description:
                            Optional duration in seconds to wait before terminating
                            the task if it is still pending. This field is useful to
                            prevent jobs from being stuck forever if the Job has a deadline
                            to start running by. If not set, it will be set to the DefaultPendingTimeoutSeconds
                            configuration value in the controller. To disable pending
                            timeout, set this to 0.
                          format: int64
                          type: integer
                        taskTemplate:
                          description:
                            Defines the template to create a single task
                            in the Job.
                          properties:
                            pod:
                              description: Describes how to create tasks as Pods.
                              properties:
                                metadata:
                                  description:
                                    "Standard object's metadata that will
                                    be added to Pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                                  type: object
                                  x-kubernetes-preserve-unknown-fields: true
                                spec:
                                  description:
                                    "Specification of the desired behavior
                                    of the pod. API docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#podspec-v1-core
                                    \n Supports context variable substitution in the
                                    following fields for containers and initContainers:
                                    image, command, args, env.value"
                                  type: object
                                  x-kubernetes-map-type: atomic
                                  x-kubernetes-preserve-unknown-fields: true
                              type: object
                          type: object
                      required:
                        - taskTemplate
                      type: object
                  required:
                    - spec
                  type: object
              required:
                - concurrency
                - template
              type: object
            status:
              description: JobConfigStatus defines the observed state of the JobConfig.
              properties:
                active:
                  description:
                    Total number of active jobs created for the JobConfig.
                    An active job is one that is waiting to create a task, waiting for
                    a task to be running, or has a running task.
                  format: int64
                  type: integer
                activeJobs:
                  description: A list of pointers to active Job objects for the JobConfig.
                  items:
                    properties:
                      creationTimestamp:
                        description: Timestamp that the Job was created.
                        format: date-time
                        type: string
                      name:
                        description: Name of the Job.
                        type: string
                      phase:
                        description: Phase of the Job.
                        type: string
                      startTime:
                        description: Timestamp that the Job was started.
                        format: date-time
                        type: string
                      uid:
                        description: UID of the Job.
                        type: string
                    required:
                      - creationTimestamp
                      - name
                      - phase
                      - uid
                    type: object
                  type: array
                lastScheduled:
                  description:
                    The last known schedule time for this job config, used
                    to persist state during controller downtime. If the controller was
                    down for a short period of time, any schedules that were missed
                    during the downtime will be back-scheduled, subject to the number
                    of schedules missed since LastScheduled.
                  format: date-time
                  type: string
                queued:
                  description:
                    Total number of Jobs queued for the JobConfig. A job
                    that is queued is one that is not yet started.
                  format: int64
                  type: integer
                queuedJobs:
                  description: A list of pointers to Job objects queued for the JobConfig.
                  items:
                    properties:
                      creationTimestamp:
                        description: Timestamp that the Job was created.
                        format: date-time
                        type: string
                      name:
                        description: Name of the Job.
                        type: string
                      phase:
                        description: Phase of the Job.
                        type: string
                      startTime:
                        description: Timestamp that the Job was started.
                        format: date-time
                        type: string
                      uid:
                        description: UID of the Job.
                        type: string
                    required:
                      - creationTimestamp
                      - name
                      - phase
                      - uid
                    type: object
                  type: array
                state:
                  description:
                    Human-readable and high-level representation of the status
                    of the JobConfig.
                  type: string
              required:
                - state
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.8.0
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: furiko
  name: jobs.execution.furiko.io
spec:
  group: execution.furiko.io
  names:
    kind: Job
    listKind: JobList
    plural: jobs
    shortNames:
      - furikojob
      - furikojobs
    singular: job
  preserveUnknownFields: false
  scope: Namespaced
  versions:
    - additionalPrinterColumns:
        - jsonPath: .metadata.creationTimestamp
          name: Age
          type: date
        - jsonPath: .status.phase
          name: Phase
          type: string
        - jsonPath: .status.createdTasks
          name: Created Tasks
          type: string
        - jsonPath: .status.runningTasks
          name: Running Tasks
          type: string
        - jsonPath: .status.condition.running.latestRunningTimestamp
          name: Run Time
          type: date
        - jsonPath: .status.condition.finished.finishTime
          name: Finish Time
          type: date
      name: v1alpha1
      schema:
        openAPIV3Schema:
          description:
            Job is the schema for a single job execution, which may consist
            of multiple tasks.
          properties:
            apiVersion:
              description:
                "APIVersion defines the versioned schema of this representation
                of an object. Servers should convert recognized schemas to the latest
                internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources"
              type: string
            kind:
              description:
                "Kind is a string value representing the REST resource this
                object represents. Servers may infer this from the endpoint the client
                submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds"
              type: string
            metadata:
              type: object
            spec:
              description: JobSpec defines the desired state of a Job.
              properties:
                configName:
                  description:
                    "ConfigName allows specifying the name of the JobConfig
                    to create the Job from. The JobConfig must be in the same namespace
                    as the Job. \n It is provided as a write-only input field for convenience,
                    and will override the template, labels and annotations from the
                    JobConfig's template. \n This field will never be returned from
                    the API. To look up the parent JobConfig, use ownerReferences."
                  type: string
                killTimestamp:
                  description:
                    Specifies the time to start killing the job. When the
                    time passes this timestamp, the controller will start attempting
                    to kill all tasks.
                  format: date-time
                  type: string
                optionValues:
                  description:
                    "Specifies key-values pairs of values for Options, in
                    JSON or YAML format. \n Example specification: \n spec: optionValues:
                    |- myStringOption: \"value\" myBoolOption: true mySelectOption:
                    - option1 - option3 \n Each entry in the optionValues struct should
                    consist of the option's name, and the value could be an arbitrary
                    type that corresponds to the option's type itself. Each option value
                    specified will be evaluated to a string based on the JobConfig's
                    OptionsSpec and added to Substitutions. If the key also exists in
                    Substitutions, that one takes priority. \n Cannot be updated after
                    creation."
                  type: string
                startPolicy:
                  description:
                    Specifies optional start policy for a Job, which specifies
                    certain conditions which have to be met before a Job is started.
                  properties:
                    concurrencyPolicy:
                      description:
                        Specifies the behaviour when there are other concurrent
                        jobs for the JobConfig.
                      type: string
                    startAfter:
                      description:
                        Specifies the earliest time that the Job can be started
                        after. Can be specified together with other fields.
                      format: date-time
                      type: string
                  required:
                    - concurrencyPolicy
                  type: object
                substitutions:
                  additionalProperties:
                    type: string
                  description:
                    "Defines key-value pairs of context variables to be substituted
                    into the TaskTemplate. Each entry should consist of the full context
                    variable name (i.e. `ctx.name`), and the values must be a string.
                    Substitutions defined here take highest precedence over both predefined
                    context variables and evaluated OptionValues. \n Most users should
                    be using OptionValues to specify custom Job Option values for running
                    the Job instead of using Subsitutions directly. \n Cannot be updated
                    after creation."
                  type: object
                template:
                  description: Template specifies how to create the Job.
                  properties:
                    forbidTaskForceDeletion:
                      description:
                        "Defines whether tasks are allowed to be force deleted
                        or not. If the node is unresponsive, it may be possible that
                        the task cannot be killed by normal graceful deletion. The controller
                        may choose to force delete the task, which would ignore the
                        final state of the task since the node is unable to return whether
                        the task is actually still alive. \n If not set to true, there
                        may be some cases when there may actually be two concurrently
                        running tasks when even when ConcurrencyPolicyForbid. Setting
                        this to true would prevent this from happening, but the Job
                        may remain stuck indefinitely until the node recovers."
                      type: boolean
                    maxAttempts:
                      description:
                        "Specifies maximum number of attempts before the
                        Job will terminate in failure. If defined, the controller will
                        wait retryDelaySeconds before creating the next task. Once maxAttempts
                        is reached, the Job terminates in RetryLimitExceeded. \n If
                        parallelism is also defined, this corresponds to the maximum
                        attempts for each parallel task. That is, if there are 5 parallel
                        task to be run at a time, with maxAttempts of 3, the Job may
                        create up to a maximum of 15 tasks if each has failed. \n Value
                        must be a positive integer. Defaults to 1."
                      format: int64
                      type: integer
                    parallelism:
                      description:
                        Describes how to run multiple tasks in parallel for
                        the Job. If not set, then there will be at most a single task
                        running at any time.
                      properties:
                        completionStrategy:
                          description:
                            Defines when the Job will complete when there
                            are multiple tasks running in parallel. For example, if
                            using the AllSuccessful strategy, the Job will only terminate
                            once all parallel tasks have terminated successfully, or
                            once any task has exhausted its maxAttempts limit.
                          type: string
                        withCount:
                          description:
                            Specifies an exact number of tasks to be run
                            in parallel. The index number can be retrieved via the "${task.index_num}"
                            context variable.
                          format: int64
                          type: integer
                        withKeys:
                          description:
                            Specifies a list of keys corresponding to each
                            task that will be run in parallel. The index key can be
                            retrieved via the "${task.index_key}" context variable.
                          items:
                            type: string
                          type: array
                          x-kubernetes-list-type: atomic
                        withMatrix:
                          additionalProperties:
                            items:
                              type: string
                            type: array
                          description:
                            'Specifies a matrix of key-value pairs, with
                            each key mapped to a list of possible values, such that
                            tasks will be started for each combination of key-value
                            pairs. The matrix values can be retrieved via context variables
                            in the following format: "${task.index_matrix.<key>}".'
                          type: object
                          x-kubernetes-map-type: atomic
                      type: object
                    retryDelaySeconds:
                      description:
                        "Optional duration in seconds to wait between retries.
                        If left empty or zero, it means no delay (i.e. retry immediately).
                        \n If parallelism is also defined, the retry delay is from the
                        time of the last failed task with the same index. That is, if
                        there are two parallel tasks - index 0 and index 1 - which failed
                        at t=0 and t=15, with retryDelaySeconds of 30, the controller
                        will only create the next attempts at t=30 and t=45 respectively.
                        \n Value must be a non-negative integer."
                      format: int64
                      type: integer
                    taskPendingTimeoutSeconds:
                      description:
                        Optional duration in seconds to wait before terminating
                        the task if it is still pending. This field is useful to prevent
                        jobs from being stuck forever if the Job has a deadline to start
                        running by. If not set, it will be set to the DefaultPendingTimeoutSeconds
                        configuration value in the controller. To disable pending timeout,
                        set this to 0.
                      format: int64
                      type: integer
                    taskTemplate:
                      description:
                        Defines the template to create a single task in the
                        Job.
                      properties:
                        pod:
                          description: Describes how to create tasks as Pods.
                          properties:
                            metadata:
                              description:
                                "Standard object's metadata that will be
                                added to Pod. More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#metadata"
                              type: object
                              x-kubernetes-preserve-unknown-fields: true
                            spec:
                              description:
                                "Specification of the desired behavior of
                                the pod. API docs: https://kubernetes.io/docs/reference/generated/kubernetes-api/v1.23/#podspec-v1-core
                                \n Supports context variable substitution in the following
                                fields for containers and initContainers: image, command,
                                args, env.value"
                              type: object
                              x-kubernetes-map-type: atomic
                              x-kubernetes-preserve-unknown-fields: true
                          type: object
                      type: object
                  required:
                    - taskTemplate
                  type: object
                ttlSecondsAfterFinished:
                  description:
                    Specifies the maximum lifetime of a Job that is finished.
                    If not set, it will be set to the DefaultTTLSecondsAfterFinished
                    configuration value in the controller.
                  format: int64
                  type: integer
                type:
                  description:
                    "Specifies the type of Job. Can be one of: Adhoc, Scheduled
                    \n Default: Adhoc"
                  type: string
              type: object
            status:
              description: JobStatus defines the observed state of a Job.
              properties:
                condition:
                  description: Condition stores details about the Job's current condition.
                  properties:
                    finished:
                      description:
                        Stores the status of the Job's finished state. If
                        specified, it means that all tasks in the Job have terminated.
                      properties:
                        finishTime:
                          description:
                            The time at which the Job was first marked as
                            finished by the controller.
                          format: date-time
                          type: string
                        latestCreationTimestamp:
                          description:
                            The time at which the latest task was created
                            by the controller. May be nil if no tasks were ever created.
                          format: date-time
                          type: string
                        latestRunningTimestamp:
                          description:
                            The time at which the latest task had started
                            running. May be nil if no tasks had started running.
                          format: date-time
                          type: string
                        message:
                          description:
                            Optional descriptive message explaining the condition's
                            last transition.
                          type: string
                        reason:
                          description:
                            Unique, one-word, CamelCase reason for the condition's
                            last transition.
                          type: string
                        result:
                          description: The result of it being finished.
                          type: string
                      required:
                        - finishTime
                        - result
                      type: object
                    queueing:
                      description:
                        Stores the status of the Job's queueing condition.
                        If specified, it means that the Job is currently not started
                        and is queued.
                      properties:
                        message:
                          description:
                            Optional descriptive message explaining the condition's
                            last transition.
                          type: string
                        reason:
                          description:
                            Unique, one-word, CamelCase reason for the condition's
                            last transition.
                          type: string
                      type: object
                    running:
                      description:
                        Stores the status of the Job's running state. If
                        specified, it means that all tasks in the Job have started running.
                        If the Job is already complete, this status may be set of not
                        all tasks are terminated.
                      properties:
                        latestRunningTimestamp:
                          description:
                            The time at which the latest task had started
                            running.
                          format: date-time
                          type: string
                        latestTaskCreationTimestamp:
                          description:
                            The timestamp for the latest task that was created
                            by the controller.
                          format: date-time
                          type: string
                        terminatingTasks:
                          description: Number of tasks waiting to be terminated.
                          format: int64
                          type: integer
                      required:
                        - latestRunningTimestamp
                        - latestTaskCreationTimestamp
                      type: object
                    waiting:
                      description:
                        Stores the status of the Job's waiting condition.
                        If specified, it means that the Job currently is waiting for
                        at least one task to be created and start running.
                      properties:
                        message:
                          description:
                            Optional descriptive message explaining the condition's
                            last transition.
                          type: string
                        reason:
                          description:
                            Unique, one-word, CamelCase reason for the condition's
                            last transition.
                          type: string
                      type: object
                  type: object
                createdTasks:
                  description:
                    CreatedTasks describes how many tasks were created in
                    total for this Job.
                  format: int64
                  type: integer
                parallelStatus:
                  description:
                    The current status for parallel execution of the job.
                    May not be set if the job is not a parallel job.
                  properties:
                    complete:
                      description:
                        If true, the job is complete and currently in the
                        process of waiting for all remaining tasks to be terminated.
                      type: boolean
                    indexes:
                      description:
                        The status for each parallel index. The size of the
                        list should be exactly equal to the total parallelism factor,
                        even if no tasks are created yet.
                      items:
                        description:
                          ParallelIndexStatus stores the status for a single
                          ParallelIndex in the Job. There should be at most one task
                          running at a time for a single parallel index in the Job.
                        properties:
                          createdTasks:
                            description:
                              Total number of tasks created for this parallel
                              index.
                            format: int64
                            type: integer
                          hash:
                            description: Hash of the index.
                            type: string
                          index:
                            description: The parallel index.
                            properties:
                              indexKey:
                                description:
                                  If withKeys is used for parallelism, contains
                                  the index key of the job as a string.
                                type: string
                              indexNumber:
                                description:
                                  If withCount is used for parallelism, contains
                                  the index number of the job numbered from 0 to N-1.
                                format: int64
                                type: integer
                              matrixValues:
                                additionalProperties:
                                  type: string
                                description:
                                  If withMatrix is used for parallelism,
                                  contains key-value pairs of the job as strings.
                                type: object
                                x-kubernetes-map-type: atomic
                            type: object
                          result:
                            description:
                              Result of executing tasks for this parallel
                              index if it is already terminated.
                            type: string
                          state:
                            description: Overall state of the parallel index.
                            type: string
                        required:
                          - createdTasks
                          - hash
                          - index
                          - state
                        type: object
                      type: array
                    successful:
                      description:
                        If complete, contains whether the job is successful
                        according to the ParallelCompletionStrategy.
                      type: boolean
                  required:
                    - complete
                    - indexes
                  type: object
                phase:
                  description: Phase stores the high-level description of a Job's state.
                  type: string
                runningTasks:
                  description:
                    RunningTasks describes how many tasks are currently running
                    for this Job.
                  format: int64
                  type: integer
                startTime:
                  description:
                    StartTime specifies the time that the Job was started
                    by the controller. If nil, it means that the Job is Queued. Cannot
                    be changed once set.
                  format: date-time
                  type: string
                tasks:
                  description:
                    Tasks contains a list of tasks created by the controller.
                    The controller updates this field when it creates a task, which
                    helps to guard against recreating tasks after they were deleted,
                    and also stores necessary task data for reconciliation in case tasks
                    are deleted.
                  items:
                    description: TaskRef stores information about a Job's owned task.
                    properties:
                      containerStates:
                        description:
                          States of each container for the task. This field
                          will be reconciled from the relevant task object, and is not
                          guaranteed to be up-to-date. This field will persist the state
                          of tasks beyond the lifetime of the task resources, even if
                          they were deleted.
                        items:
                          properties:
                            containerID:
                              description:
                                Container ID of the container. May be empty
                                if the container is not yet created.
                              type: string
                            exitCode:
                              description:
                                Exit status from the last termination of
                                the container
                              format: int32
                              type: integer
                            message:
                              description: Message regarding the container's status.
                              type: string
                            reason:
                              description:
                                Unique, one-word, CamelCase reason for the
                                container's status.
                              type: string
                            signal:
                              description: Signal from the last termination of the container
                              format: int32
                              type: integer
                          required:
                            - exitCode
                          type: object
                        type: array
                      creationTimestamp:
                        description: Creation time of the task.
                        format: date-time
                        type: string
                      deletedStatus:
                        description:
                          "DeletedStatus, if set, specifies a placeholder
                          Status of the task after it is reconciled as deleted. If the
                          task is deleted, Status cannot be reconciled from the task
                          any more, and instead uses information stored in DeletedStatus.
                          In other words, this field acts as a tombstone marker, and
                          is only used after the deletion of the task object is complete.
                          \n While the task is in the process of being deleted (i.e.
                          deletionTimestamp is set but object still exists), Status
                          will still be reconciled from the actual task's status. \n
                          If the task is already deleted and DeletedStatus is also not
                          set, then the task's state will be marked as TaskDeletedFinalStateUnknown."
                        properties:
                          message:
                            description: Descriptive message for the task's status.
                            type: string
                          reason:
                            description:
                              Unique, one-word, CamelCase reason for the
                              task's status.
                            type: string
                          result:
                            description:
                              If the state is Terminated, the result of the
                              task.
                            type: string
                          state:
                            description: State of the task.
                            type: string
                        required:
                          - state
                        type: object
                      finishTimestamp:
                        description:
                          Time that the task finished. Will always return
                          a non-zero timestamp if task is finished.
                        format: date-time
                        type: string
                      name:
                        description:
                          Name of the task. Assumes to share the same namespace
                          as the Job.
                        type: string
                      nodeName:
                        description:
                          Node name that the task was bound to. May be empty
                          if task was never scheduled.
                        type: string
                      parallelIndex:
                        description:
                          If the Job is a parallel job, then contains the
                          parallel index of the task.
                        properties:
                          indexKey:
                            description:
                              If withKeys is used for parallelism, contains
                              the index key of the job as a string.
                            type: string
                          indexNumber:
                            description:
                              If withCount is used for parallelism, contains
                              the index number of the job numbered from 0 to N-1.
                            format: int64
                            type: integer
                          matrixValues:
                            additionalProperties:
                              type: string
                            description:
                              If withMatrix is used for parallelism, contains
                              key-value pairs of the job as strings.
                            type: object
                            x-kubernetes-map-type: atomic
                        type: object
                      retryIndex:
                        description:
                          The retry index of the task, starting from 0 up
                          to maxAttempts - 1.
                        format: int64
                        type: integer
                      runningTimestamp:
                        description:
                          Timestamp that the task transitioned to running.
                          May be zero if the task was never observed as started running.
                        format: date-time
                        type: string
                      status:
                        description:
                          Status of the task. This field will be reconciled
                          from the relevant task object, may not be always up-to-date.
                          This field will persist the state of tasks beyond the lifetime
                          of the task resources, even if they are deleted.
                        properties:
                          message:
                            description: Descriptive message for the task's status.
                            type: string
                          reason:
                            description:
                              Unique, one-word, CamelCase reason for the
                              task's status.
                            type: string
                          result:
                            description:
                              If the state is Terminated, the result of the
                              task.
                            type: string
                          state:
                            description: State of the task.
                            type: string
                        required:
                          - state
                        type: object
                    required:
                      - containerStates
                      - creationTimestamp
                      - name
                      - retryIndex
                      - status
                    type: object
                  type: array
                  x-kubernetes-list-type: atomic
              required:
                - condition
                - createdTasks
                - phase
                - runningTasks
              type: object
          type: object
      served: true
      storage: true
      subresources:
        status: {}
status:
  acceptedNames:
    kind: ""
    plural: ""
  conditions: []
  storedVersions: []
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: execution-controller
  namespace: furiko-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: execution-webhook
  namespace: furiko-system
---
apiVersion: v1
kind: ServiceAccount
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-webhook-certgen
  namespace: furiko-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-execution-controller-role
  namespace: furiko-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - coordination.k8s.io
    resources:
      - leases
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
      - delete
  - apiGroups:
      - ""
    resources:
      - events
    verbs:
      - create
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-execution-webhook-role
  namespace: furiko-system
rules:
  - apiGroups:
      - ""
    resources:
      - configmaps
      - secrets
    verbs:
      - get
      - list
      - watch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-webhook-certgen-role
  namespace: furiko-system
rules:
  - apiGroups:
      - ""
    resources:
      - secrets
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-execution-controller-role
rules:
  - apiGroups:
      - ""
    resources:
      - events
      - pods
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - execution.furiko.io
    resources:
      - jobconfigs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - execution.furiko.io
    resources:
      - jobconfigs/finalizers
    verbs:
      - update
  - apiGroups:
      - execution.furiko.io
    resources:
      - jobconfigs/status
    verbs:
      - get
      - patch
      - update
  - apiGroups:
      - execution.furiko.io
    resources:
      - jobs
    verbs:
      - create
      - delete
      - get
      - list
      - patch
      - update
      - watch
  - apiGroups:
      - execution.furiko.io
    resources:
      - jobs/finalizers
    verbs:
      - update
  - apiGroups:
      - execution.furiko.io
    resources:
      - jobs/status
    verbs:
      - get
      - patch
      - update
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-execution-webhook-role
rules:
  - apiGroups:
      - execution.furiko.io
    resources:
      - jobconfigs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - execution.furiko.io
    resources:
      - jobconfigs/status
    verbs:
      - get
  - apiGroups:
      - execution.furiko.io
    resources:
      - jobs
    verbs:
      - get
      - list
      - watch
  - apiGroups:
      - execution.furiko.io
    resources:
      - jobs/status
    verbs:
      - get
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-metrics-proxy-clusterrole
rules:
  - apiGroups:
      - authentication.k8s.io
    resources:
      - tokenreviews
    verbs:
      - create
  - apiGroups:
      - authorization.k8s.io
    resources:
      - subjectaccessreviews
    verbs:
      - create
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-webhook-certgen-clusterrole
rules:
  - apiGroups:
      - admissionregistration.k8s.io
    resources:
      - validatingwebhookconfigurations
      - mutatingwebhookconfigurations
    verbs:
      - get
      - list
      - watch
      - create
      - update
      - patch
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-execution-controller-rolebinding
  namespace: furiko-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: furiko-execution-controller-role
subjects:
  - kind: ServiceAccount
    name: execution-controller
    namespace: furiko-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-execution-webhook-rolebinding
  namespace: furiko-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: furiko-execution-webhook-role
subjects:
  - kind: ServiceAccount
    name: execution-webhook
    namespace: furiko-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-webhook-certgen-rolebinding
  namespace: furiko-system
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: furiko-webhook-certgen-role
subjects:
  - kind: ServiceAccount
    name: furiko-webhook-certgen
    namespace: furiko-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-execution-controller-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: furiko-execution-controller-role
subjects:
  - kind: ServiceAccount
    name: execution-controller
    namespace: furiko-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-execution-webhook-rolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: furiko-execution-webhook-role
subjects:
  - kind: ServiceAccount
    name: execution-webhook
    namespace: furiko-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-metrics-proxy-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: furiko-metrics-proxy-clusterrole
subjects:
  - kind: ServiceAccount
    name: execution-controller
    namespace: furiko-system
  - kind: ServiceAccount
    name: execution-webhook
    namespace: furiko-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-webhook-certgen-clusterrolebinding
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: furiko-webhook-certgen-clusterrole
subjects:
  - kind: ServiceAccount
    name: furiko-webhook-certgen
    namespace: furiko-system
---
apiVersion: v1
data:
  config.yaml: |
    # Here we define the bootstrap config for execution-controller.
    # These values are used for bootstrapping of the controller manager at startup,
    # so changing any values here require a restart of execution-controller in order
    # to take effect.
    apiVersion: config.furiko.io/v1alpha1
    kind: ExecutionControllerConfig

    # defaultResync controls the default resync duration.
    defaultResync: 10m

    # leaderElection controls leader election configuration.
    leaderElection:
      # enabled controls whether leader election is enabled.
      enabled: true

      # leaseName controls the name used for the lease.
      # If left empty, then a default name will be used.
      leaseName: execution-controller

      # leaseNamespace controls the namespace used for the lease.
      leaseNamespace: furiko-system

      # leaseDuration is the duration that non-leader candidates will wait after
      # observing a leadership renewal until attempting to acquire leadership of a
      # led but unrenewed leader slot. This is effectively the maximum duration that
      # a leader can be stopped before it is replaced by another candidate. This is
      # only applicable if leader election is enabled.
      leaseDuration: 30s

      # renewDeadline is the interval between attempts by the acting master to renew
      # a leadership slot before it stops leading. This must be less than or equal to
      # the lease duration. This is only applicable if leader election is enabled.
      renewDeadline: 15s

      # retryPeriod is the duration the clients should wait between attempting
      # acquisition and renewal of a leadership. This is only applicable if leader
      # election is enabled.
      retryPeriod: 5s

    # dynamicConfigs defines how to load dynamic configs.
    dynamicConfigs:
      # configMap defines how the dynamic ConfigMap is loaded.
      configMap:
        namespace: furiko-system
        name: execution-dynamic-config

      # secret defines how the dynamic Secret is loaded.
      secret:
        namespace: furiko-system
        name: execution-dynamic-config

    # HTTP handler configuration.
    http:
      # bindAddress is the TCP address that the controller should bind to for serving
      # HTTP requests.
      bindAddress: ':8080'

      # metrics controls metrics serving.
      metrics:
        # enabled is whether the controller manager enables serving Prometheus metrics.
        enabled: true

      # health controls health status serving.
      health:
        # enabled is whether the controller manager enables serving health probes.
        enabled: true

        # readinessProbePath is the path to the readiness probe.
        readinessProbePath: '/readyz'

        # livenessProbePath is the path to the liveness probe.
        livenessProbePath: '/healthz'

    # controllerConcurrency defines the concurrency factor for individual controllers.
    controllerConcurrency:
      # cron controls the concurrency for the Cron controller.
      cron:
        factorOfCPUs: 4

      # job controls the concurrency for the Job controller.
      job:
        factorOfCPUs: 4

      # jobConfig controls the concurrency for the JobConfig controller.
      jobConfig:
        factorOfCPUs: 4

      # jobQueue controls the concurrency for the JobQueue controller.
      jobQueue:
        factorOfCPUs: 4
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: execution-controller-config
  namespace: furiko-system
---
apiVersion: v1
data:
  _readme: |
    # This ConfigMap contains the dynamic config for execution-controller.
    # We can tune several knobs in execution-controller without requiring a restart.
    # Each file in this ConfigMap groups together configuration of a single sub-component.
    # As a start, we have populated a set of sane default values for you.
    # More info: https://furiko.io/reference/configuration/dynamic/
  cron: |
    apiVersion: config.furiko.io/v1alpha1
    kind: CronExecutionConfig

    # Specifies the format used to parse cron expressions. Select between "standard"
    # (default) or "quartz".
    cronFormat: "standard"

    # Specifies if cron expressions should be hashed using the JobConfig's name.
    #
    # This enables "hash cron expressions", which looks like `0 H * * *`. This
    # particular example means to run once a day on the 0th minute of some hour,
    # which will be determined by hashing the JobConfig's name. By enabling this
    # option, JobConfigs that use such cron schedules will be load balanced across
    # the cluster.
    #
    # If disabled, any JobConfigs that use the `H` syntax will throw a parse error.
    cronHashNames: true

    # Specifies if the seconds field of a cron expression should be a `H` or `0`
    # by default. If enabled, it will be `H`, otherwise it will default to `0`.
    #
    # For JobConfigs which use a short cron expression format (i.e. 5 or 6 tokens
    # long), the seconds field is omitted and is typically assumed to be `0` (e.g.
    # `5 10 * * *` means to run at 10:05:00 every day). Enabling this option will
    # allow JobConfigs to be scheduled across the minute, improving load balancing.
    #
    # Users can still choose to start at 0 seconds by explicitly specifying a long
    # cron expression format with `0` in the seconds field. In the above example,
    # this would be `0 5 10 * * * *`.
    cronHashSecondsByDefault: false

    # Specifies if the fields should be hashed along with the JobConfig's name.
    #
    # For example, `H H * * * * *` will always hash the seconds and minutes to the
    # same value, for example 00:37:37, 01:37:37, etc. Enabling this option will
    # append additional keys to be hashed to introduce additional non-determinism.
    cronHashFields: true

    # Defines a default timezone to use for JobConfigs that do not specify a timezone.
    # If left empty, UTC will be used as the default timezone.
    defaultTimezone: "UTC"

    # Defines the maximum number of jobs that the controller should back-schedule,
    # or attempt to create after coming back up from downtime. Having a sane value
    # here would prevent a thundering herd of jobs being scheduled that would exhaust
    # resources in the cluster.
    #
    # Set this to 0 to disable back-scheduling.
    maxMissedSchedules: 5

    # Defines the maximum downtime that the controller can tolerate. If the controller
    # was shut down for an extended period of time, any jobs that should have been created
    # beyond the maximum downtime threshold would not be back-scheduled once it is started again.
    maxDowntimeThresholdSeconds: 300
  jobConfigs: |
    apiVersion: config.furiko.io/v1alpha1
    kind: JobConfigExecutionConfig

    # The global maximum enqueued jobs that can be enqueued for a single JobConfig.
    maxEnqueuedJobs: 20
  jobs: |
    apiVersion: config.furiko.io/v1alpha1
    kind: JobExecutionConfig

    # The default time-to-live (TTL) for a Job after it has finished. Lower this
    # value to reduce the strain on the cluster/kubelet. Set to 0 to delete immediately
    # after the Job is finished.
    defaultTTLSecondsAfterFinished: 3600

    # The default timeout for a task to remain in a pending state. Defaults to 15 minutes
    # in order to prevent jobs from retrying indefinitely.
    #
    # To prevent setting a default pending timeout globally, set this to 0. Individual jobs
    # can still specify spec.taskPendingTimeoutSeconds in the JobTemplate to override this
    # global default value.
    defaultPendingTimeoutSeconds: 900

    # The duration before the controller uses force deletion instead of normal deletion.
    # This timeout is computed from the deletionTimestamp of the object, which may also include
    # an additional delay of deletionGracePeriodSeconds.
    #
    # Force deletion causes the task to be deleted without confirmation that the task has already
    # terminated. When pod is used for taskTemplate, this means that
    #
    # Set this value to 0 to disable force deletion globally. Individual jobs can also specify
    # spec.forbidTaskForceDeletion in the JobTemplate to disable force deletion if this
    # behavior is not desired.
    forceDeleteTaskTimeoutSeconds: 900
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: execution-dynamic-config
  namespace: furiko-system
---
apiVersion: v1
data:
  config.yaml: |
    # Here we define the bootstrap config for execution-webhook.
    # These values are used for bootstrapping of the webhook server at startup,
    # so changing any values here require a restart of execution-webhook in order
    # to take effect.
    apiVersion: config.furiko.io/v1alpha1
    kind: ExecutionWebhookConfig

    # defaultResync controls the default resync duration.
    defaultResync: 10m

    # Webhook server configuration.
    webhooks:
      # bindAddress is the TCP address that the controller manager should bind to for
      # serving webhook requests over HTTPS.
      bindAddress: ':9443'

      # tlsCertFile is the path to the X.509 certificate to use for serving webhook
      # requests over HTTPS.
      tlsCertFile: "/etc/webhook/certs/cert"

      # tlsPrivateKeyFile is the path to the private key which corresponds to
      # TLSCertFile, to use for serving webhook requests over HTTPS.
      tlsPrivateKeyFile: "/etc/webhook/certs/key"

    # dynamicConfigs defines how to load dynamic configs.
    dynamicConfigs:
      # configMap defines how the dynamic ConfigMap is loaded.
      configMap:
        namespace: furiko-system
        name: execution-dynamic-config

      # secret defines how the dynamic Secret is loaded.
      secret:
        namespace: furiko-system
        name: execution-dynamic-config

    # HTTP handler configuration.
    http:
      # bindAddress is the TCP address that the controller should bind to for serving
      # HTTP requests.
      bindAddress: ':8080'

      # metrics controls metrics serving.
      metrics:
        # enabled is whether the controller manager enables serving Prometheus metrics.
        enabled: true

      # health controls health status serving.
      health:
        # enabled is whether the controller manager enables serving health probes.
        enabled: true

        # readinessProbePath is the path to the readiness probe.
        readinessProbePath: '/readyz'

        # livenessProbePath is the path to the liveness probe.
        livenessProbePath: '/healthz'
kind: ConfigMap
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: execution-webhook-config
  namespace: furiko-system
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app: execution-webhook
    app.kubernetes.io/name: furiko
  name: execution-webhook-metrics-service
  namespace: furiko-system
spec:
  ports:
    - name: https
      port: 8443
      protocol: TCP
      targetPort: https
  selector:
    app: execution-webhook
    app.kubernetes.io/name: furiko
---
apiVersion: v1
kind: Service
metadata:
  labels:
    app.kubernetes.io/name: furiko
  name: execution-webhook-service
  namespace: furiko-system
spec:
  ports:
    - port: 443
      protocol: TCP
      targetPort: 9443
  selector:
    app: execution-webhook
    app.kubernetes.io/name: furiko
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: execution-controller
    app.kubernetes.io/name: furiko
  name: execution-controller
  namespace: furiko-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: execution-controller
      app.kubernetes.io/name: furiko
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: controller
      labels:
        app: execution-controller
        app.kubernetes.io/component: execution-controller
        app.kubernetes.io/name: furiko
    spec:
      containers:
        - args:
            - --config=/etc/controller/config.yaml
            - -v=2
          command:
            - /execution-controller
          image: ghcr.io/furiko-io/execution-controller:latest
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          name: controller
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 4
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /etc/controller/config.yaml
              name: controller-config
              subPath: config.yaml
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
      securityContext:
        runAsNonRoot: true
      serviceAccountName: execution-controller
      terminationGracePeriodSeconds: 10
      volumes:
        - configMap:
            name: execution-controller-config
          name: controller-config
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    app.kubernetes.io/component: execution-webhook
    app.kubernetes.io/name: furiko
  name: execution-webhook
  namespace: furiko-system
spec:
  replicas: 1
  selector:
    matchLabels:
      app: execution-webhook
      app.kubernetes.io/name: furiko
  template:
    metadata:
      annotations:
        kubectl.kubernetes.io/default-container: webhook
      labels:
        app: execution-webhook
        app.kubernetes.io/component: execution-webhook
        app.kubernetes.io/name: furiko
    spec:
      containers:
        - args:
            - --config=/etc/webhook/config.yaml
            - -v=2
          command:
            - /execution-webhook
          image: ghcr.io/furiko-io/execution-webhook:latest
          imagePullPolicy: Always
          livenessProbe:
            httpGet:
              path: /healthz
              port: 8080
            initialDelaySeconds: 15
            periodSeconds: 20
          name: webhook
          readinessProbe:
            httpGet:
              path: /readyz
              port: 8080
            initialDelaySeconds: 5
            periodSeconds: 10
          resources:
            limits:
              cpu: 4
              memory: 2Gi
            requests:
              cpu: 500m
              memory: 512Mi
          securityContext:
            allowPrivilegeEscalation: false
          volumeMounts:
            - mountPath: /etc/webhook/config.yaml
              name: webhook-config
              subPath: config.yaml
            - mountPath: /etc/webhook/certs
              name: webhook-certs
              readOnly: true
        - args:
            - --secure-listen-address=0.0.0.0:8443
            - --upstream=http://127.0.0.1:8080/
            - --logtostderr=true
            - --v=0
          image: gcr.io/kubebuilder/kube-rbac-proxy:v0.8.0
          name: kube-rbac-proxy
          ports:
            - containerPort: 8443
              name: https
              protocol: TCP
            - containerPort: 9443
              name: webhook-server
              protocol: TCP
          resources:
            limits:
              cpu: 500m
              memory: 128Mi
            requests:
              cpu: 5m
              memory: 64Mi
      securityContext:
        runAsNonRoot: true
      serviceAccountName: execution-webhook
      terminationGracePeriodSeconds: 10
      volumes:
        - configMap:
            name: execution-webhook-config
          name: webhook-config
        - name: webhook-certs
          secret:
            defaultMode: 420
            secretName: execution-webhook-certs
---
apiVersion: batch/v1
kind: Job
metadata:
  labels:
    app.kubernetes.io/component: execution-webhook-certgen
    app.kubernetes.io/name: furiko
  name: execution-webhook-certgen
  namespace: furiko-system
spec:
  template:
    metadata:
      labels:
        app.kubernetes.io/name: furiko
    spec:
      containers:
        - args:
            - patch
            - --namespace=furiko-system
            - --secret-name=execution-webhook-certs
            - --patch-failure-policy=Fail
            - --patch-mutating=false
            - --patch-validating=true
            - --webhook-name=furiko-execution-validating-webhook-configuration
          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1
          name: patch-validating
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
        - args:
            - patch
            - --namespace=furiko-system
            - --secret-name=execution-webhook-certs
            - --patch-failure-policy=Fail
            - --patch-mutating=true
            - --patch-validating=false
            - --webhook-name=furiko-execution-mutating-webhook-configuration
          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1
          name: patch-mutating
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
      initContainers:
        - args:
            - create
            - --host=execution-webhook-service,execution-webhook-service.furiko-system,execution-webhook-service.furiko-system.svc
            - --namespace=furiko-system
            - --secret-name=execution-webhook-certs
          image: k8s.gcr.io/ingress-nginx/kube-webhook-certgen:v1.1.1
          name: generate-certs
          resources:
            limits:
              cpu: 500m
              memory: 512Mi
            requests:
              cpu: 10m
              memory: 64Mi
          securityContext:
            allowPrivilegeEscalation: false
            readOnlyRootFilesystem: true
      restartPolicy: OnFailure
      serviceAccountName: furiko-webhook-certgen
  ttlSecondsAfterFinished: 600
---
apiVersion: admissionregistration.k8s.io/v1
kind: MutatingWebhookConfiguration
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-execution-mutating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: execution-webhook-service
        namespace: furiko-system
        path: /mutating/jobs.execution.furiko.io
    failurePolicy: Fail
    name: mutating.webhook.jobs.execution.furiko.io
    rules:
      - apiGroups:
          - execution.furiko.io
        apiVersions:
          - "*"
        operations:
          - CREATE
          - UPDATE
        resources:
          - jobs
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: execution-webhook-service
        namespace: furiko-system
        path: /mutating/jobconfigs.execution.furiko.io
    failurePolicy: Fail
    name: mutating.webhook.jobconfigs.execution.furiko.io
    rules:
      - apiGroups:
          - execution.furiko.io
        apiVersions:
          - "*"
        operations:
          - CREATE
          - UPDATE
        resources:
          - jobconfigs
    sideEffects: None
---
apiVersion: admissionregistration.k8s.io/v1
kind: ValidatingWebhookConfiguration
metadata:
  creationTimestamp: null
  labels:
    app.kubernetes.io/name: furiko
  name: furiko-execution-validating-webhook-configuration
webhooks:
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: execution-webhook-service
        namespace: furiko-system
        path: /validating/jobs.execution.furiko.io
    failurePolicy: Fail
    name: validation.webhook.jobs.execution.furiko.io
    rules:
      - apiGroups:
          - execution.furiko.io
        apiVersions:
          - "*"
        operations:
          - CREATE
          - UPDATE
        resources:
          - jobs
    sideEffects: None
  - admissionReviewVersions:
      - v1
    clientConfig:
      service:
        name: execution-webhook-service
        namespace: furiko-system
        path: /validating/jobconfigs.execution.furiko.io
    failurePolicy: Fail
    name: validation.webhook.jobconfigs.execution.furiko.io
    rules:
      - apiGroups:
          - execution.furiko.io
        apiVersions:
          - "*"
        operations:
          - CREATE
          - UPDATE
        resources:
          - jobconfigs
    sideEffects: None
